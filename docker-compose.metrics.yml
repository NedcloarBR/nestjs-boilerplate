services:
  otel-collector:
    image: otel/opentelemetry-collector:0.61.0
    command: [ "--config=/etc/otel-collector.yaml" ]
    volumes:
      - ./metrics/otel-collector.yaml:/etc/otel-collector.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "55679:55679" # zpages extension
    depends_on:
      - tempo
      - prometheus
    networks:
      - nestjs_boilerplate_network

  tempo:
    image: grafana/tempo:2.2.3
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./metrics/tempo.yaml:/etc/tempo.yaml
      - ./metrics/data/tempo-data:/tmp/tempo
    ports:
      - "14268" # jaeger ingest
      - "3200"  # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      - "9411"  # zipkin
    networks:
      - nestjs_boilerplate_network
    
  loki:
    image: grafana/loki:2.8.5
    command: -config.file=/etc/loki/loki.yaml
    ports:
      - "3100:3100" # loki needs to be exposed so it receives logs
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    volumes:
      - ./metrics/loki.yaml:/etc/loki/loki.yaml
      - ./metrics/data/loki-data:/tmp/loki
    networks:
      - nestjs_boilerplate_network

  promtail:
    image: grafana/promtail:2.9.0
    volumes:
      - ./metrics/promtail-config.yaml:/etc/promtail/config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki
    networks:
      - nestjs_boilerplate_network
    
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./metrics/prometheus.yaml:/etc/prometheus.yaml
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    ports:
      - "9090:9090"
    networks:
      - nestjs_boilerplate_network

  grafana:
    image: grafana/grafana:10.4.2
    volumes:
      - ./metrics/data/grafana-data/datasources:/etc/grafana/provisioning/datasources
      - ./metrics/data/grafana-data/dashboards-provisioning:/etc/grafana/provisioning/dashboards
      - ./metrics/data/grafana-data/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "${GRAFANA_PORT}:${GRAFANA_PORT}"
    depends_on:
      - prometheus
      - tempo
      - loki
    networks:
      - nestjs_boilerplate_network

networks:
  nestjs_boilerplate_network:
    driver: bridge